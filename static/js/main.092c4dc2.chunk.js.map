{"version":3,"sources":["components/Item.js","components/List.js","components/Carousel.js","App.js","index.js"],"names":["Item","this","props","imageSrc","itemWidth","className","src","style","width","alt","replace","PureComponent","List","images","position","animationDuration","transform","transition","map","image","key","Carousel","state","handleMove","direction","step","infinite","frameSize","frameSizePx","fullFramesAmount","Math","floor","length","picsShownAmount","maxPosition","setState","type","onClick","React","Component","App","stepSize","handleSubmit","e","preventDefault","handleStepSizeInput","target","value","handleframeSizeInput","handleInfiniteLoop","handleitemWidthInput","animationDurationInput","onSubmit","onChange","ReactDOM","render","document","getElementById"],"mappings":"ySA0BeA,G,yLArBH,IAAD,EACyBC,KAAKC,MAA7BC,EADD,EACCA,SAAUC,EADX,EACWA,UAElB,OACE,wBAAIC,UAAU,kBACZ,yBACEA,UAAU,gBACVC,IAAKH,EACLI,MAAO,CAAEC,MAAM,GAAD,OAAKJ,EAAL,OACdK,IAAKN,EAASO,QAAQ,uBAAwB,W,GAVrCC,kBCgCJC,G,6KA9BH,IAAD,EACoDX,KAAKC,MAAxDE,EADD,EACCA,UAAWS,EADZ,EACYA,OAAQC,EADpB,EACoBA,SAAUC,EAD9B,EAC8BA,kBAErC,OACE,wBACER,MAAO,CACLS,UAAU,cAAD,OAAgBF,EAAhB,OACTG,WAAW,aAAD,OAAeF,EAAf,OAEZV,UAAU,kBAETQ,EAAOK,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,CACEC,IAAKD,EACLf,UAAWA,EACXD,SAAUgB,Y,GAhBHR,kBCgFJU,E,4MA/EbC,MAAQ,CACNR,SAAU,G,EAGZS,WAAa,SAACC,GAAe,IAAD,EAC+B,EAAKtB,MAAtDuB,EADkB,EAClBA,KAAMrB,EADY,EACZA,UAAWsB,EADC,EACDA,SAAUb,EADT,EACSA,OAAQc,EADjB,EACiBA,UACrCC,EAAcxB,EAAYuB,EAC1BE,EAAmBC,KAAKC,MAAMlB,EAAOmB,OAASL,GAAa,EAC3DM,GAAoBJ,EAAmB,GAAKF,EAE5CO,GAAgBL,EAAmBD,GADZf,EAAOmB,OAASC,GAAmB7B,EAG9C,SAAdoB,GACF,EAAKW,UAAS,SAACb,GACb,OAAIA,EAAMR,SAAYW,EAAOrB,EAAa,EACpCsB,GAA+B,IAAnBJ,EAAMR,SACb,CAAEA,SAAUoB,GAGd,CAAEpB,SAAU,GAGd,CAAEA,SAAUQ,EAAMR,SAAYW,EAAOrB,MAI9B,SAAdoB,GACF,EAAKW,UAAS,SAACb,GACb,OAAIA,EAAMR,SAAYW,EAAOrB,EAAa8B,EACpCR,GAAYJ,EAAMR,WAAaoB,EAC1B,CAAEpB,SAAU,GAGd,CAAEA,SAAUoB,GAGd,CAAEpB,SAAUQ,EAAMR,SAAYW,EAAOrB,O,uDAKxC,IAAD,SACqDH,KAAKC,MAAzDW,EADD,EACCA,OAAQc,EADT,EACSA,UAAWvB,EADpB,EACoBA,UAAWW,EAD/B,EAC+BA,kBAC9BD,EAAab,KAAKqB,MAAlBR,SAER,OACE,yBAAKP,MAAO,CAAEC,MAAM,GAAD,OAAKmB,EAAYvB,EAAjB,OAAkCC,UAAU,YAC7D,kBAAC,EAAD,CACES,SAAUA,EACVD,OAAQA,EACRT,UAAWA,EACXW,kBAAmBA,IAErB,4BACEqB,KAAK,SACLC,QAAS,kBAAM,EAAKd,WAAW,UAFjC,QAMA,4BACEa,KAAK,SACLC,QAAS,kBAAM,EAAKd,WAAW,UAFjC,a,GA5Dee,IAAMC,WCmIdC,E,4MAlIblB,MAAQ,CACNT,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEF4B,SAAU,EACVd,UAAW,EACXD,UAAU,EACVtB,UAAW,IACXW,kBAAmB,K,EAGrB2B,aAAe,SAACC,GACdA,EAAEC,kB,EAGJC,oBAAsB,SAACF,GACrB,EAAKR,SAAS,CAAEM,UAAWE,EAAEG,OAAOC,S,EAGtCC,qBAAuB,SAACL,GACtB,EAAKR,SAAS,CAAER,WAAYgB,EAAEG,OAAOC,S,EAGvCE,mBAAqB,SAACN,GACpB,EAAKR,UAAS,SAAAb,GAAK,MAAK,CAAEI,UAAWJ,EAAMI,c,EAG7CwB,qBAAuB,SAACP,GACtB,EAAKR,SAAS,CAAE/B,WAAYuC,EAAEG,OAAOC,MAAMrC,QAAQ,OAAQ,O,EAG7DyC,uBAAyB,SAACR,GACxB,EAAKR,SAAS,CAAEpB,mBAAoB4B,EAAEG,OAAOC,MAAMrC,QAAQ,OAAQ,O,uDAG3D,IAAD,EAQHT,KAAKqB,MANPT,EAFK,EAELA,OACAc,EAHK,EAGLA,UACAc,EAJK,EAILA,SACAf,EALK,EAKLA,SACAtB,EANK,EAMLA,UACAW,EAPK,EAOLA,kBAKF,OACE,yBAAKV,UAAU,OACb,4CAEGQ,EAAOmB,OACP,IAHH,UAMA,kBAAC,EAAD,CACEnB,OAAQA,EACRY,KAAMgB,EACNd,UAAWA,EACXvB,UAAWA,EACXW,kBAAmBA,EACnBW,SAAUA,IAEZ,0BAAM0B,SAAUnD,KAAKyC,cACnB,2BAAOrC,UAAU,cAAjB,QAEE,4BACE0C,MAAON,EACPY,SAAUpD,KAAK4C,qBAxBL,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IA0BzB3B,KAAI,SAAAO,GAAI,OACnB,4BAAQL,IAAKK,EAAMsB,MAAOtB,GACvBA,QAKT,2BAAOpB,UAAU,cAAjB,cAEE,4BACE0C,MAAOpB,EACP0B,SAAUpD,KAAK+C,sBApCA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAsCzB9B,KAAI,SAAAO,GAAI,OACxB,4BAAQL,IAAKK,EAAMsB,MAAOtB,GACvBA,QAKT,2BAAOpB,UAAU,cAAjB,YAEE,2BACE0C,MAAOrB,EACP2B,SAAUpD,KAAKgD,mBACfb,KAAK,cAGT,2BAAO/B,UAAU,cAAjB,oBAEE,2BACE+B,KAAK,SACLW,MAAO3C,EACPiD,SAAUpD,KAAKiD,wBAGnB,2BAAO7C,UAAU,cAAjB,0BAEE,2BACE+B,KAAK,SACLW,MAAOhC,EACPsC,SAAUpD,KAAKkD,gC,GAzHXb,IAAMC,WCDxBe,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.092c4dc2.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './Item.scss';\n\nclass Item extends PureComponent {\n  render() {\n    const { imageSrc, itemWidth } = this.props;\n\n    return (\n      <li className=\"carousel__item\">\n        <img\n          className=\"carousel__img\"\n          src={imageSrc}\n          style={{ width: `${itemWidth}px` }}\n          alt={imageSrc.replace(/(^\\.\\/img\\/|\\.png$)/g, '')}\n        />\n      </li>\n    );\n  }\n}\n\nItem.propTypes = {\n  imageSrc: PropTypes.string.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n};\n\nexport default Item;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Item from './Item';\nimport './List.scss';\n\nclass List extends PureComponent {\n  render() {\n    const { itemWidth, images, position, animationDuration } = this.props;\n\n    return (\n      <ul\n        style={{\n          transform: `translateX(${position}px)`,\n          transition: `transform ${animationDuration}ms`,\n        }}\n        className=\"carousel__list\"\n      >\n        {images.map(image => (\n          <Item\n            key={image}\n            itemWidth={itemWidth}\n            imageSrc={image}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nList.propTypes = {\n  position: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Carousel.scss';\nimport List from './List';\n\nclass Carousel extends React.Component {\n  state = {\n    position: 0,\n  }\n\n  handleMove = (direction) => {\n    const { step, itemWidth, infinite, images, frameSize } = this.props;\n    const frameSizePx = itemWidth * frameSize;\n    const fullFramesAmount = Math.floor(images.length / frameSize) - 1;\n    const picsShownAmount = ((fullFramesAmount + 1) * frameSize);\n    const notFullFrameLength = ((images.length - picsShownAmount) * itemWidth);\n    const maxPosition = -(fullFramesAmount * frameSizePx) - notFullFrameLength;\n\n    if (direction === 'prev') {\n      this.setState((state) => {\n        if (state.position + (step * itemWidth) > 0) {\n          if (infinite && state.position === 0) {\n            return { position: maxPosition };\n          }\n\n          return { position: 0 };\n        }\n\n        return { position: state.position + (step * itemWidth) };\n      });\n    }\n\n    if (direction === 'next') {\n      this.setState((state) => {\n        if (state.position - (step * itemWidth) < maxPosition) {\n          if (infinite && state.position === maxPosition) {\n            return { position: 0 };\n          }\n\n          return { position: maxPosition };\n        }\n\n        return { position: state.position - (step * itemWidth) };\n      });\n    }\n  }\n\n  render() {\n    const { images, frameSize, itemWidth, animationDuration } = this.props;\n    const { position } = this.state;\n\n    return (\n      <div style={{ width: `${frameSize * itemWidth}px` }} className=\"carousel\">\n        <List\n          position={position}\n          images={images}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n        <button\n          type=\"button\"\n          onClick={() => this.handleMove('prev')}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.handleMove('next')}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  step: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n  images: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  frameSize: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    stepSize: 3,\n    frameSize: 3,\n    infinite: false,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n  }\n\n  handleStepSizeInput = (e) => {\n    this.setState({ stepSize: +e.target.value });\n  }\n\n  handleframeSizeInput = (e) => {\n    this.setState({ frameSize: +e.target.value });\n  }\n\n  handleInfiniteLoop = (e) => {\n    this.setState(state => ({ infinite: !state.infinite }));\n  }\n\n  handleitemWidthInput = (e) => {\n    this.setState({ itemWidth: +e.target.value.replace(/\\D+/g, '') });\n  }\n\n  animationDurationInput = (e) => {\n    this.setState({ animationDuration: +e.target.value.replace(/\\D+/g, '') });\n  }\n\n  render() {\n    const {\n      images,\n      frameSize,\n      stepSize,\n      infinite,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n    const stepOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const frameSizeOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Carousel with\n          {images.length}\n          {' '}\n          images\n        </h1>\n        <Carousel\n          images={images}\n          step={stepSize}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n        <form onSubmit={this.handleSubmit}>\n          <label className=\"app__input\">\n            Step:\n            <select\n              value={stepSize}\n              onChange={this.handleStepSizeInput}\n            >\n              {stepOptions.map(step => (\n                <option key={step} value={step}>\n                  {step}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label className=\"app__input\">\n            Frame size:\n            <select\n              value={frameSize}\n              onChange={this.handleframeSizeInput}\n            >\n              {frameSizeOptions.map(step => (\n                <option key={step} value={step}>\n                  {step}\n                </option>\n              ))}\n            </select>\n          </label>\n          <label className=\"app__input\">\n            Infinite:\n            <input\n              value={infinite}\n              onChange={this.handleInfiniteLoop}\n              type=\"checkbox\"\n            />\n          </label>\n          <label className=\"app__input\">\n            Image width (px):\n            <input\n              type=\"number\"\n              value={itemWidth}\n              onChange={this.handleitemWidthInput}\n            />\n          </label>\n          <label className=\"app__input\">\n            animationDuration (ms):\n            <input\n              type=\"number\"\n              value={animationDuration}\n              onChange={this.animationDurationInput}\n            />\n          </label>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}